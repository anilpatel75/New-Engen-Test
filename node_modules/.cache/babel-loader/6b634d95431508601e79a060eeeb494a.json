{"ast":null,"code":"var _jsxFileName = \"/Users/anilpatel/Desktop/React/reactexample/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Maincontent from './Components/Maincontent';\nimport Footer from './Components/Footer';\nimport SelectedColor from './Components/SelectedColor';\nimport { BrowserRouter, Route } from 'react-router-dom';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateRandomColor = () => {\n      let counter = 1;\n      let obj = {\n        id: null,\n        name: ''\n      };\n\n      for (let i = 0; i <= 7; i++) {\n        let array1 = [];\n\n        for (let j = 0; j < 14; j++) {\n          let data = '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n          obj.id = counter;\n          obj.name = data;\n          array1.push(obj);\n          counter++;\n          obj = {\n            id: null,\n            name: ''\n          };\n        }\n\n        this.result.push(array1);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        colorList: [...this.result]\n      });\n      this.setState({\n        currentColor: this.result['0']\n      });\n    };\n\n    this.onButtonClick = ind => {\n      let data = this.state.colorList.filter((color, index) => {\n        if (ind == index) {\n          return color;\n        }\n      });\n      this.setState({\n        currentColor: data['0']\n      });\n    };\n\n    this.colorSelect = colorSelect => {\n      this.setState({\n        selectColor: colorSelect\n      });\n    };\n\n    this.onButtonClick = () => {\n      this.counter++;\n      this.setState({\n        currentColor: [...this.state.currentColor, ...this.state.colorList[this.counter]]\n      });\n    };\n\n    this.state = {\n      colorList: [],\n      currentColor: [],\n      selectColor: {}\n    };\n    this.result = [];\n    this.counter = 0;\n    this.generateRandomColor();\n  } // method for generating the random number of diffrent color\n\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      style: mainContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exect: true,\n      path: \"/\",\n      render: props => React.createElement(Maincontent, {\n        mainColorData: this.state.currentColor,\n        colorSelect: this.colorSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      render: props => React.createElement(SelectedColor, {\n        selectColor: this.state.selectColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      onButtonClick: this.onButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))))));\n  }\n\n}\nconst mainContent = {\n  display: \"flex\",\n  flexFlow: \"wrap\"\n};\nexport default App;","map":{"version":3,"sources":["/Users/anilpatel/Desktop/React/reactexample/src/App.js"],"names":["React","Component","Header","Maincontent","Footer","SelectedColor","BrowserRouter","Route","App","constructor","props","generateRandomColor","counter","obj","id","name","i","array1","j","data","Math","random","toString","push","result","componentDidMount","setState","colorList","currentColor","onButtonClick","ind","state","filter","color","index","colorSelect","selectColor","render","mainContent","display","flexFlow"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AAEC,OAAO,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAClCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAerBC,mBAfqB,GAeC,MAAM;AAC1B,UAAKC,OAAO,GAAG,CAAf;AACI,UAAIC,GAAG,GAAE;AACAC,QAAAA,EAAE,EAAC,IADH;AAECC,QAAAA,IAAI,EAAC;AAFN,OAAT;;AAIF,WAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAE,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACxB,YAAIC,MAAM,GAAE,EAAZ;;AAEA,aAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAmBA,CAAC,EAApB,EAAwB;AACrB,cAAIC,IAAI,GAAE,MAAI,CAACC,IAAI,CAACC,MAAL,KAAc,QAAd,IAAwB,CAAzB,EAA4BC,QAA5B,CAAqC,EAArC,CAAd;AACAT,UAAAA,GAAG,CAACC,EAAJ,GAAUF,OAAV;AACAC,UAAAA,GAAG,CAACE,IAAJ,GAAWI,IAAX;AACAF,UAAAA,MAAM,CAACM,IAAP,CAAYV,GAAZ;AACAD,UAAAA,OAAO;AACPC,UAAAA,GAAG,GAAG;AACNC,YAAAA,EAAE,EAAC,IADG;AAEJC,YAAAA,IAAI,EAAC;AAFD,WAAN;AAIL;;AACD,aAAKS,MAAL,CAAYD,IAAZ,CAAiBN,MAAjB;AACA;AAED,KAtCoB;;AAAA,SAyCrBQ,iBAzCqB,GAyCD,MAAM;AACxB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAC,CAAC,GAAG,KAAKH,MAAT;AAAX,OAAd;AACA,WAAKE,QAAL,CAAc;AAACE,QAAAA,YAAY,EAAC,KAAKJ,MAAL,CAAY,GAAZ;AAAd,OAAd;AAED,KA7CoB;;AAAA,SA8ChBK,aA9CgB,GA8CCC,GAAD,IAAS;AAC1B,UAAIX,IAAI,GAAG,KAAKY,KAAL,CAAWJ,SAAX,CAAqBK,MAArB,CAA4B,CAACC,KAAD,EAAOC,KAAP,KAAgB;AACnD,YAAGJ,GAAG,IAAII,KAAV,EAAiB;AACjB,iBAAOD,KAAP;AACC;AACH,OAJS,CAAX;AAKE,WAAKP,QAAL,CAAc;AAACE,QAAAA,YAAY,EAACT,IAAI,CAAC,GAAD;AAAlB,OAAd;AACD,KArDgB;;AAAA,SAsDjBgB,WAtDiB,GAsDFA,WAAD,IAAiB;AAC3B,WAAKT,QAAL,CAAc;AAACU,QAAAA,WAAW,EAACD;AAAb,OAAd;AACH,KAxDgB;;AAAA,SAyDhBN,aAzDgB,GAyDA,MAAM;AACpB,WAAKjB,OAAL;AAEC,WAAKc,QAAL,CAAc;AAACE,QAAAA,YAAY,EAAC,CAAC,GAAG,KAAKG,KAAL,CAAWH,YAAf,EAA4B,GAAG,KAAKG,KAAL,CAAWJ,SAAX,CAAqB,KAAKf,OAA1B,CAA/B;AAAd,OAAd;AAEH,KA9DgB;;AAEjB,SAAKmB,KAAL,GAAa;AACVJ,MAAAA,SAAS,EAAC,EADA;AAEVC,MAAAA,YAAY,EAAC,EAFH;AAGVQ,MAAAA,WAAW,EAAC;AAHF,KAAb;AAKA,SAAKZ,MAAL,GAAc,EAAd;AACC,SAAKZ,OAAL,GAAe,CAAf;AACD,SAAKD,mBAAL;AACD,GAXiC,CAepC;;;AAkDA0B,EAAAA,MAAM,GAAG;AACP,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAEC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,KAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAC,GAAnB;AAAuB,MAAA,MAAM,EAAE5B,KAAK,IAAI,oBAAC,WAAD;AAAc,QAAA,aAAa,EAAI,KAAKqB,KAAL,CAAWH,YAA1C;AAAwD,QAAA,WAAW,EAAI,KAAKO,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAEzB,KAAK,IAAG,oBAAC,aAAD;AAAe,QAAA,WAAW,EAAI,KAAKqB,KAAL,CAAWK,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAOD,oBAAC,MAAD;AAAS,MAAA,aAAa,EAAI,KAAKP,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPC,CADD,CADD,CAFA,CADC,CADJ;AAwBD;;AA1FmC;AA4FnC,MAAOS,WAAW,GAAG;AACnBC,EAAAA,OAAO,EAAC,MADW;AAEnBC,EAAAA,QAAQ,EAAC;AAFU,CAArB;AAKD,eAAehC,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Maincontent from './Components/Maincontent';\nimport Footer from './Components/Footer';\nimport SelectedColor from './Components/SelectedColor';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\n export class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       colorList:[],\n       currentColor:[],\n       selectColor:{}\n    }\n    this.result = [];\n     this.counter = 0;\n    this.generateRandomColor();\n  }\n\n\n \n// method for generating the random number of diffrent color\ngenerateRandomColor = () => {\n  let  counter = 1;\n      let obj ={\n               id:null,\n                name:''\n               }\n    for(let i= 0; i<=7; i++) {\n     let array1 =[];\n   \n     for(let j= 0;j<14; j++) {\n        let data ='#'+(Math.random()*0xFFFFFF<<0).toString(16);\n        obj.id  = counter;\n        obj.name = data;\n        array1.push(obj);\n        counter++;\n        obj = {\n        id:null,\n          name:''\n      }\n  }\n  this.result.push(array1)\n }\n\n}\n\n// used for the component mounting\ncomponentDidMount = () => {\n  this.setState({colorList:[...this.result]})\n  this.setState({currentColor:this.result['0']})\n \n}\n     onButtonClick = (ind) => {\n    let data = this.state.colorList.filter((color,index) =>{\n        if(ind == index) {\n        return color;\n        }\n     })\n      this.setState({currentColor:data['0']});\n    } \n    colorSelect = (colorSelect) => {\n        this.setState({selectColor:colorSelect});\n    }\n     onButtonClick = () => {\n       this.counter++;\n       \n        this.setState({currentColor:[...this.state.currentColor,...this.state.colorList[this.counter]]})\n       \n    }\n\nrender() {\n  return (\n      <BrowserRouter>\n     <div className=\"App\">\n     <Header />\n     <div className=\"container-fluid\">\n      <div className=\"row\">\n       <div className=\"col-md-12\" style={mainContent}>\n    \n       <Route  exect path=\"/\" render={props => <Maincontent  mainColorData = {this.state.currentColor} colorSelect = {this.colorSelect}/> } />\n       <Route path=\"/about\" render={props =><SelectedColor selectColor = {this.state.selectColor} /> } />\n      \n      \n     \n      <Footer  onButtonClick = {this.onButtonClick} />\n      </div>\n     \n    </div>\n     </div>\n  \n    \n    </div>\n      </BrowserRouter>\n   \n  );\n}\n }\n const  mainContent = {\n   display:\"flex\",\n   flexFlow:\"wrap\"\n }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}