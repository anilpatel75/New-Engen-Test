{"ast":null,"code":"var _jsxFileName = \"/Users/anilpatel/Desktop/React/reactexample/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Sidebar from './Components/Sidebar';\nimport Maincontent from './Components/Maincontent';\nimport Footer from './Components/Footer';\nimport SelectedColor from './Components/SelectedColor';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateRandomColor = () => {\n      let counter = 1;\n      let obj = {\n        id: null,\n        name: ''\n      };\n\n      for (let i = 0; i <= 7; i++) {\n        let array1 = [];\n\n        for (let j = 0; j < 12; j++) {\n          let data = '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n          obj.id = counter;\n          obj.name = data;\n          array1.push(obj);\n          counter++;\n          obj = {\n            id: null,\n            name: ''\n          };\n        }\n\n        this.result.push(array1);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        colorList: [...this.result]\n      });\n      this.setState({\n        currentColor: this.result['0']\n      });\n    };\n\n    this.onButtonClick = ind => {\n      let data = this.state.colorList.filter((color, index) => {\n        if (ind == index) {\n          return color;\n        }\n      });\n      this.setState({\n        currentColor: data['0']\n      });\n    };\n\n    this.colorSelect = colorSelect => {\n      this.setState({\n        selectColor: colorSelect\n      });\n    };\n\n    this.state = {\n      colorList: [],\n      currentColor: [],\n      selectColor: {}\n    };\n    this.result = [];\n    this.generateRandomColor();\n  } // method for generating the random number of diffrent color\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      style: mainContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Maincontent, {\n      mainColorData: this.state.currentColor,\n      colorSelect: this.colorSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(SelectedColor, {\n      selectColor: this.state.selectColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      footerColor: this.state.colorList,\n      onButtonClick: this.onButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })))));\n  }\n\n}\nconst mainContent = {\n  display: \"flex\",\n  flexFlow: \"\"\n};\nexport default App;","map":{"version":3,"sources":["/Users/anilpatel/Desktop/React/reactexample/src/App.js"],"names":["React","Component","Header","Sidebar","Maincontent","Footer","SelectedColor","App","constructor","props","generateRandomColor","counter","obj","id","name","i","array1","j","data","Math","random","toString","push","result","componentDidMount","setState","colorList","currentColor","onButtonClick","ind","state","filter","color","index","colorSelect","selectColor","render","mainContent","display","flexFlow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Sidebar from './Components/Sidebar';\nimport Maincontent from './Components/Maincontent';\nimport Footer from './Components/Footer';\nimport SelectedColor from './Components/SelectedColor';\n\n export class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       colorList:[],\n       currentColor:[],\n       selectColor:{}\n    }\n    this.result = [];\n    this.generateRandomColor();\n  }\n\n\n \n// method for generating the random number of diffrent color\ngenerateRandomColor = () => {\n  let  counter = 1;\n      let obj ={\n               id:null,\n                name:''\n               }\n    for(let i= 0; i<=7; i++) {\n     let array1 =[];\n   \n     for(let j= 0;j<12; j++) {\n        let data ='#'+(Math.random()*0xFFFFFF<<0).toString(16);\n        obj.id  = counter;\n        obj.name = data;\n        array1.push(obj);\n        counter++;\n        obj = {\n        id:null,\n          name:''\n      }\n  }\n  this.result.push(array1)\n }\n\n}\n\n// used for the component mounting\ncomponentDidMount = () => {\n  this.setState({colorList:[...this.result]})\n  this.setState({currentColor:this.result['0']})\n \n}\n     onButtonClick = (ind) => {\n    let data = this.state.colorList.filter((color,index) =>{\n        if(ind == index) {\n        return color;\n        }\n     })\n      this.setState({currentColor:data['0']});\n    } \n    colorSelect = (colorSelect) => {\n        this.setState({selectColor:colorSelect});\n    }\n\nrender() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <div className=\"container-fluid\">\n      <div className=\"row\">\n      <div className=\"col-md-3\">\n      <Sidebar />\n      </div>\n      <div className=\"col-md-9\" style={mainContent}>\n      <Maincontent  mainColorData = {this.state.currentColor}  colorSelect = {this.colorSelect}/>\n      <SelectedColor selectColor = {this.state.selectColor} />\n      <Footer  footerColor ={this.state.colorList} onButtonClick = {this.onButtonClick} />\n      </div>\n     \n    </div>\n     </div>\n  \n    \n    </div>\n  );\n}\n }\n const  mainContent = {\n   display:\"flex\",\n   flexFlow:\"\"\n }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}